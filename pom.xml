<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!--
	 | Useful Maven commands:
	 | To exclude specific submodules (in particular those with unresolvable dependencies such as JDK Device I/O) use the -pl '!submodule-a' option, e.g.:
	 |   mvn -pl '!diozero-provider-jdkdio10,!diozero-provider-jdkdio11,!diozero-imu-visualiser' package
	 | Skip tests:
	 |   -Dmaven.test.skip=true
	 |   -DskipTests
	 | General lifecycle:
	 |   mvn package
	 |   mvn install
	 |   mvn deploy
	 | Show updates to versions:
	 |   mvn versions:display-plugin-updates
	 |   mvn versions:display-property-updates
	 |   mvn versions:display-dependency-updates
	 | Updates properties to latest versions:
	 |   mvn versions:update-properties
	 | Dependency analysis:
	 |   mvn dependency:analyze
	 |   mvn dependency:tree
	 | Set new project version:
	 |   mvn versions:set -DnewVersion=0.5-SNAPSHOT
	 |   mvn versions:commit
	 | Licence stuff:
	 |   mvn license:update-project-license
	 |   mvn license:update-file-header
	 | Push to repository:
	 |   mvn deploy
	 |   mvn deploy -P release
	 |  (go to https://oss.sonatype.org/#nexus-search;gav~com.diozero~diozero-core~~~~kw,versionexpand
	 |  then Staging Repositories close and release)
	 | Release (can't get this to work correctly, messes up version numbers by deploying with the old snapshot version):
	 |   mvn release:prepare -DignoreSnapshots=true
	 |   mvn release:rollback & mvn release:clean 
	 |   mvn release:perform
	 | Current release process (see http://central.sonatype.org/pages/apache-maven.html):
	 |   Update version:
	 |     mvn versions:set -DnewVersion=xxx
	 |     mvn versions:commit
	 |   Check-in pom.xml files modified by mvn versions.
	 |   Build and push:
	 |     mvn deploy -P release
	 |   Add tag:
	 |     mvn scm:tag diozero-xxx
	 |   Alternatively:
	 |     git tag -a diozero-xxx
	 |     git push origin - -tags
	 |   To delete a local and remote tag:
	 |     git tag -d <tag>
	 |     git push origin :refs/tags/<tag>
	 |   Update version to next SNAPSHOT version:
	 |     mvn versions:set -DnewVersion=yyy-SNAPSHOT
	 |     mvn versions:commit
	 |-->

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.diozero</groupId>
		<artifactId>diozero-bom</artifactId>
		<version>1.4.0-dafik</version>
		<relativePath>diozero-bom/pom.xml</relativePath>
	</parent>

	<artifactId>diozero</artifactId>
	<packaging>pom</packaging>
	<name>diozero</name>
	<description>Java Device I/O library that is portable across Single Board Computers (including Raspberry Pi, BeagleBone Black, Odroid C2, CHIP, ASUS TinkerBoard, Allwinner H3 / H5 / H6)</description>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/mattjlewis/diozero/issues</url>
	</issueManagement>

	<modules>
		<module>diozero-bom</module>
		<module>diozero-archetype</module>
		<module>diozero-core</module>
		<module>diozero-imu-devices</module>
		<module>diozero-provider-mock</module>
		<module>diozero-provider-bbbiolib</module>
		<module>diozero-provider-firmata</module>
		<module>diozero-provider-pigpio</module>
		<module>diozero-provider-voodoospark</module>
		<module>diozero-remote-common</module>
		<module>diozero-remote-server</module>
		<module>diozero-provider-remote</module>
		<module>diozero-ws281x-java</module>
		<module>diozero-sampleapps</module>
		<module>distribution</module>
	</modules>

	<properties>
	</properties>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<rulesUri>file:///${maven.multiModuleProjectDirectory}/maven-version-rules.xml</rulesUri>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>m2e</id>
			<!-- This profile is only active when the property "m2e.version" is set, 
				which is the case when building in Eclipse with m2e. -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<!-- Fix for the Eclipse "execution not covered by lifecycle configuration" 
							warning -->
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>${eclipse.m2e.lifecycle-mapping.version}</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>license-maven-plugin</artifactId>
												<versionRange>[${license-maven-plugin.version},)</versionRange>
												<goals>
													<goal>download-licenses</goal>
													<goal>update-project-license</goal>
													<goal>update-file-header</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>
